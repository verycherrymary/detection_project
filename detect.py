from pathlib import Path
import streamlit as st
import ultralytics
ultralytics.checks()
from ultralytics import YOLO
from IPython.display import display
import os
from PIL import Image as ImagePIL
from roboflow import Roboflow

# ====================== –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ============================
# –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
# https://docs.streamlit.io/library/api-reference/utilities/st.set_page_config
# 1 control
st.set_page_config(
    layout="wide",
    initial_sidebar_state="auto",
    page_title="Rodent_detection_project",
    page_icon="üßä",
)

# ----------- —Ñ—É–Ω–∫—Ü–∏–∏ -------------------------------------

# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Å –¥–∏—Å–∫–∞
# –∫—ç—à–∏—Ä—É–µ–º, –∏–Ω–∞—á–µ –∫–∞–∂–¥—ã–π —Ä–∞–∑ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –∑–∞–Ω–æ–≤–æ
@st.cache_data
def load_image(image_path):
    image = ImagePIL.open(image_path)
    # –æ–±—Ä–µ–∑–∫–∞ –¥–æ –Ω—É–∂–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø—Ä–æ–ø–æ—Ä—Ü–∏–π
    MAX_SIZE = (600,400)
    image.thumbnail(MAX_SIZE)
    return image

# —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–µ–π Yolo –∏ Roboflow
# –∫—ç—à–∏—Ä—É–µ–º, –∏–Ω–∞—á–µ –∫–∞–∂–¥—ã–π —Ä–∞–∑ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –∑–∞–Ω–æ–≤–æ
@st.cache_data
def load_model(model_path):
    # –∑–∞–≥—Ä—É–∑–∫–∞ –≥–æ—Ç–æ–≤–æ–π –ø—Ä–µ–¥–æ–±—É—á–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ –∏–∑ —Ñ–∞–π–ª–∞
    model=YOLO (model_path) 
    return model
# –∫—ç—à–∏—Ä—É–µ–º, –∏–Ω–∞—á–µ –∫–∞–∂–¥—ã–π —Ä–∞–∑ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –∑–∞–Ω–æ–≤–æ
@st.cache_data
def load_model_rob():
    # –ó–∞–≥—Ä—É–∑–∫–∞ –≥–æ—Ç–æ–≤–æ–π –º–æ–¥–µ–ª–∏ —Å —Å–∞–π—Ç–∞ Roboflow
    rf = Roboflow(api_key="o90RvmmLcvrsH55PkfK9")
    project = rf.workspace().project("cuterat-mon9g")
    model = project.version(3).model
    return model

# ------------- –∑–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –º–æ–¥–µ–ª–∏ ---------

# –ø—É—Ç—å –¥–æ –∫–∞—Ä—Ç–∏–Ω–∫–∏
image_path = Path.cwd() / 'photo_2024-07-13_16-17-23.jpg'
image = load_image(image_path)

# –ø—É—Ç—å –¥–æ –º–æ–¥–µ–ª–∏
model_path = Path.cwd() / 'best_v8n_collab.pt'
model_yolo = load_model(model_path)
model_rob=load_model_rob()

# ---------- –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏ ------------------------
# 2 control
st.write(
    """
    # –û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –≥—Ä—ã–∑—É–Ω–æ–≤ (–º—ã—à–µ–π/–∫—Ä—ã—Å)
    ### –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫—É –∏–ª–∏ –≤–∏–¥–µ–æ –∏ –ø–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    """
)

# –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
# 3 control
st.image(image)

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–æ–π —Ñ–∞–π–ª–∞
uploaded_file = st.sidebar.file_uploader("#### –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª (–∫–∞—Ä—Ç–∏–Ω–∫—É) –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏, –∏–Ω–∞—á–µ –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞")
# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª
if uploaded_file is not None:
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ–±—ä–µ–∫—Ç BytesIO –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ PIL
    img = ImagePIL.open(uploaded_file)
# –°–æ–∑–¥–∞–µ–º –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
output_dir = Path.cwd() /'img_mouse'
output_filename = 'mouse_new.jpg'
output_path = os.path.join(output_dir, output_filename)
st.write(output_path)
# –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JPEG
img.save(output_path, format='JPEG')
mouse_img=output_path
# –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ—Ç–µ–∫—Ü–∏–∏ –≥–æ—Ç–æ–≤–æ–π –º–æ–¥–µ–ª—å—é roboflow –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ
model_rob.predict(mouse_img, confidence=40, overlap=30).save("prediction.jpg")
a=model_rob.predict(mouse_img, confidence=40, overlap=30).json()
pred=a['predictions']
first = pred [0]
st.write("### –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ—Ç–µ–∫—Ü–∏–∏ –Ω–∏–∂–µ - rats, rodent (–∫—Ä—ã—Å—ã, –º—ã—à–∏,–≥—Ä—ã–∑—É–Ω—ã)):")
st.write('##### –ö–ª–∞—Å—Å:', first['class'], '–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å:','{:.2f}'.format(first['confidence']))
st.image('prediction.jpg')


# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–æ–π –≤–∏–¥–µ–æ—Ñ–∞–π–ª–∞
uploaded_video = st.sidebar.file_uploader("#### –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª (–≤–∏–¥–µ–æ) –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏, –∏–Ω–∞—á–µ –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞")
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
if uploaded_video is not None:
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –≤ –ø–∞–ø–∫—É
    with open('img_mouse//video_new.mp4', 'wb') as f:
        f.write(uploaded_video.getbuffer())
st.write("##### –í–∏–¥–µ–æ —Å –¥–µ—Ç–µ–∫—Ü–∏–µ–π –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –æ–∫–Ω–µ windows, –Ω–µ –±—Ä–∞—É–∑–µ—Ä–∞")
st.write("##### –î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —ç—Ç–æ–≥–æ –∂–µ –≤–∏–¥–µ–æ –Ω–∞–∂–º–∏—Ç–µ Rerun")
source = "img_mouse//video_new.mp4"
# –¥–µ—Ç–µ–∫—Ü–∏—è –≥—Ä—ã–∑—É–Ω–æ–≤ –ø–æ –≤–∏–¥–µ–æ –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è, —Å –ø–æ–∫–∞–∑–æ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –æ–∫–Ω–µ windows
results = model_yolo(source, save=False, show=True)
# video_file = open('runs//detect//predict4//video_mouse.avi', 'rb')
# video_bytes = video_file.read()

# st.video(yolo_detect())
